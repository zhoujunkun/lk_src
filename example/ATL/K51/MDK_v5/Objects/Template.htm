<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Jan 15 16:41:16 2020
<BR><P>
<H3>Maximum Stack Usage =        104 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; lk_task_init &rArr; lk_borad_init &rArr; lk_pwm_init &rArr; TMR_TimeBaseInit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[40]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">ACC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[69]">assert_failed</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">assert_failed</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[40]">ACC_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f4xx_it.o(i.BusFault_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3e]">COMP1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3f]">COMP2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[39]">DMA2_Channel1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3a]">DMA2_Channel2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel3_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[41]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f4xx_it.o(i.DebugMon_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from lk_board.o(i.EXTI3_IRQHandler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f4xx_it.o(i.HardFault_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f4xx_it.o(i.MemManage_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f4xx_it.o(i.NMI_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f4xx_it.o(i.PendSV_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[56]">QueueInit</a> from ringqueue.o(i.QueueInit) referenced from ringqueue.o(.data)
 <LI><a href="#[57]">QueueLength</a> from ringqueue.o(i.QueueLength) referenced from ringqueue.o(.data)
 <LI><a href="#[59]">Queue_pop</a> from ringqueue.o(i.Queue_pop) referenced from ringqueue.o(.data)
 <LI><a href="#[58]">Queue_push</a> from ringqueue.o(i.Queue_push) referenced from ringqueue.o(.data)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[35]">SDIO_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f4xx_it.o(i.SVC_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from at32f4xx_it.o(i.SysTick_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[43]">SystemInit</a> from system_at32f4xx.o(i.SystemInit) referenced from startup_at32f415rct7.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from main.o(i.TMR1_BRK_TMR9_IRQHandler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[25]">TMR1_CC_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[23]">TMR1_OV_TMR10_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[36]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from lk_board.o(i.USART3_IRQHandler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[3d]">USBOTG_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f4xx_it.o(i.UsageFault_Handler) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_at32f415rct7.o(.text) referenced from startup_at32f415rct7.o(RESET)
 <LI><a href="#[44]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f415rct7.o(.text)
 <LI><a href="#[4d]">ble_anysys_process</a> from lk_ble.o(i.ble_anysys_process) referenced from lk_ble.o(.data)
 <LI><a href="#[4f]">ble_heart</a> from lk_ble_ops.o(i.ble_heart) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[51]">ble_heat_gear</a> from lk_ble_ops.o(i.ble_heat_gear) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[53]">ble_massage_gear</a> from lk_ble_ops.o(i.ble_massage_gear) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[55]">ble_massage_mode</a> from lk_ble_ops.o(i.ble_massage_mode) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[54]">ble_massage_over</a> from lk_ble_ops.o(i.ble_massage_over) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[52]">ble_massage_time</a> from lk_ble_ops.o(i.ble_massage_time) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[4c]">ble_queuePush</a> from lk_ble.o(i.ble_queuePush) referenced from lk_ble.o(.data)
 <LI><a href="#[50]">ble_quit_weixing</a> from lk_ble_ops.o(i.ble_quit_weixing) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[4e]">ble_shutdown</a> from lk_ble_ops.o(i.ble_shutdown) referenced from lk_ble_ops.o(.data)
 <LI><a href="#[42]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[45]">myBlefunc</a> from lk_ble.o(i.myBlefunc) referenced from lk_ble.o(i.ble_anysys_process)
 <LI><a href="#[4a]">remote433_down_callBack</a> from lk_task.o(i.remote433_down_callBack) referenced from lk_task.o(i.lk_task_init)
 <LI><a href="#[49]">remote433_left_callBack</a> from lk_task.o(i.remote433_left_callBack) referenced from lk_task.o(i.lk_task_init)
 <LI><a href="#[47]">remote433_menu_callBack</a> from lk_task.o(i.remote433_menu_callBack) referenced from lk_task.o(i.lk_task_init)
 <LI><a href="#[48]">remote433_right_callBack</a> from lk_task.o(i.remote433_right_callBack) referenced from lk_task.o(i.lk_task_init)
 <LI><a href="#[4b]">remote433_up_callBack</a> from lk_task.o(i.remote433_up_callBack) referenced from lk_task.o(i.lk_task_init)
 <LI><a href="#[46]">usart_send</a> from lk_board.o(i.usart_send) referenced from lk_board.o(i.lk_borad_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[60]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[99]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>COMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OV_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USBOTG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415rct7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[9e]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[5f]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>Delay_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lk_task.o(i.Delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Delay_init &rArr; SysTick_CLKSourceConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, lk_board.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXTI3_IRQHandler &rArr; my433M_anasys
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetIntStatus
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetCounter
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my433M_anasys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>EXTI_ClearIntPendingBit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at32f4xx_exti.o(i.EXTI_ClearIntPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>EXTI_GenerateSWInt</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, at32f4xx_exti.o(i.EXTI_GenerateSWInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_GenerateSWInt
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
</UL>

<P><STRONG><a name="[64]"></a>EXTI_GetIntStatus</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, at32f4xx_exti.o(i.EXTI_GetIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>EXTI_Init</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, at32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, at32f4xx_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
</UL>

<P><STRONG><a name="[6c]"></a>GPIO_Init</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, at32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_gpio_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>NVIC_Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_nvic_config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
</UL>

<P><STRONG><a name="[6e]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_PriorityGroupConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_nvic_config
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>QueueInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ringqueue.o(i.QueueInit))
<BR>[Address Reference Count : 1]<UL><LI> ringqueue.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>QueueLength</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ringqueue.o(i.QueueLength))
<BR>[Address Reference Count : 1]<UL><LI> ringqueue.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>Queue_pop</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ringqueue.o(i.Queue_pop))
<BR>[Address Reference Count : 1]<UL><LI> ringqueue.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>Queue_push</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, ringqueue.o(i.Queue_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Queue_push
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ringqueue.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_rcc_config
</UL>

<P><STRONG><a name="[70]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB2PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_rcc_config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
</UL>

<P><STRONG><a name="[84]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[71]"></a>RCC_StepModeCmd</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_StepModeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo144MHSI
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_CLKSourceConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SystemInit</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SetSysClockTo144MHSI &rArr; RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo144MHSI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.TMR1_BRK_TMR9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TMR1_BRK_TMR9_IRQHandler &rArr; task_1ms_callBack &rArr; TMR_GetINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_1ms_callBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>TMR_ARPreloadConfig</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_ARPreloadConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_ARPreloadConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
</UL>

<P><STRONG><a name="[75]"></a>TMR_ClearITPendingBit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_1ms_callBack
</UL>

<P><STRONG><a name="[76]"></a>TMR_Cmd</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_timerCnt_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_taskTime_init
</UL>

<P><STRONG><a name="[65]"></a>TMR_GetCounter</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, at32f4xx_tim.o(i.TMR_GetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_GetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>TMR_GetINTStatus</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_GetINTStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_GetINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_1ms_callBack
</UL>

<P><STRONG><a name="[78]"></a>TMR_INTConfig</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_INTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_taskTime_init
</UL>

<P><STRONG><a name="[79]"></a>TMR_OC1Init</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, at32f4xx_tim.o(i.TMR_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TMR_OC1Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
</UL>

<P><STRONG><a name="[7a]"></a>TMR_OC1PreloadConfig</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_OC1PreloadConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_OC1PreloadConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
</UL>

<P><STRONG><a name="[7b]"></a>TMR_OC2Init</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, at32f4xx_tim.o(i.TMR_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TMR_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
</UL>

<P><STRONG><a name="[7c]"></a>TMR_OC2PreloadConfig</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_OC2PreloadConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_OC2PreloadConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
</UL>

<P><STRONG><a name="[93]"></a>TMR_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_OCStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
</UL>

<P><STRONG><a name="[7d]"></a>TMR_TimeBaseInit</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, at32f4xx_tim.o(i.TMR_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_timerCnt_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_taskTime_init
</UL>

<P><STRONG><a name="[92]"></a>TMR_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_timerCnt_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_taskTime_init
</UL>

<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lk_board.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART3_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>USART_Cmd</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_init
</UL>

<P><STRONG><a name="[81]"></a>USART_GetFlagStatus</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_send
</UL>

<P><STRONG><a name="[7e]"></a>USART_GetITStatus</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>USART_INTConfig</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_INTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_init
</UL>

<P><STRONG><a name="[83]"></a>USART_Init</STRONG> (Thumb, 370 bytes, Stack size 48 bytes, at32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_init
</UL>

<P><STRONG><a name="[7f]"></a>USART_ReceiveData</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>USART_SendData</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_send
</UL>

<P><STRONG><a name="[89]"></a>USART_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f4xx_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415rct7.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[69]"></a>assert_failed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetIntStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GenerateSWInt
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2PreloadConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1PreloadConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_INTConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetINTStatus
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetCounter
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearITPendingBit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ARPreloadConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>

<P><STRONG><a name="[86]"></a>ble_anasys</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lk_ble.o(i.ble_anasys))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_anasys &rArr; lk_ble_checkSum
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_ble_checkSum
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_anysys_process
</UL>

<P><STRONG><a name="[4d]"></a>ble_anysys_process</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lk_ble.o(i.ble_anysys_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_anysys_process &rArr; ble_anasys &rArr; lk_ble_checkSum
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_anasys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lk_ble.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>ble_heart</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_heart))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>ble_heat_gear</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_heat_gear))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>ble_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_init))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[53]"></a>ble_massage_gear</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_massage_gear))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>ble_massage_mode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_massage_mode))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>ble_massage_over</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_massage_over))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>ble_massage_time</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_massage_time))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>ble_queuePush</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lk_ble.o(i.ble_queuePush))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>ble_quit_weixing</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_quit_weixing))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>ble_shutdown</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lk_ble_ops.o(i.ble_shutdown))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble_ops.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>ble_uart_init</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, lk_board.o(i.ble_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[8a]"></a>lk_433m_hardInit</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lk_board.o(i.lk_433m_hardInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lk_433m_hardInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GenerateSWInt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[87]"></a>lk_ble_checkSum</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, lk_ble.o(i.lk_ble_checkSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lk_ble_checkSum
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_anasys
</UL>

<P><STRONG><a name="[8b]"></a>lk_borad_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lk_board.o(i.lk_borad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lk_borad_init &rArr; lk_pwm_init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_timerCnt_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_rcc_config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_pwm_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_nvic_config
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_gpio_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_433m_hardInit
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_task_init
</UL>

<P><STRONG><a name="[8e]"></a>lk_gpio_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lk_board.o(i.lk_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lk_gpio_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[8d]"></a>lk_nvic_config</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lk_board.o(i.lk_nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lk_nvic_config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[91]"></a>lk_pwm_init</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, lk_board.o(i.lk_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lk_pwm_init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OCStructInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2PreloadConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1PreloadConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ARPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[8c]"></a>lk_rcc_config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lk_board.o(i.lk_rcc_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lk_rcc_config &rArr; RCC_APB2PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[96]"></a>lk_remote_init</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, lk_433m.o(i.lk_remote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lk_remote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_task_init
</UL>

<P><STRONG><a name="[94]"></a>lk_taskTime_init</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lk_task.o(i.lk_taskTime_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lk_taskTime_init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_INTConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_task_init
</UL>

<P><STRONG><a name="[95]"></a>lk_task_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lk_task.o(i.lk_task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lk_task_init &rArr; lk_borad_init &rArr; lk_pwm_init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_taskTime_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_remote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>lk_timerCnt_init</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, lk_board.o(i.lk_timerCnt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lk_timerCnt_init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_borad_init
</UL>

<P><STRONG><a name="[42]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = main &rArr; lk_task_init &rArr; lk_borad_init &rArr; lk_pwm_init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lk_task_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[97]"></a>motor_shake</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, lk_task.o(i.motor_shake))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = motor_shake
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_1ms_callBack
</UL>

<P><STRONG><a name="[67]"></a>my433M_anasys</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, lk_433m.o(i.my433M_anasys))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = my433M_anasys
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>myBlefunc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lk_ble.o(i.myBlefunc))
<BR>[Address Reference Count : 1]<UL><LI> lk_ble.o(i.ble_anysys_process)
</UL>
<P><STRONG><a name="[4a]"></a>remote433_down_callBack</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lk_task.o(i.remote433_down_callBack))
<BR>[Address Reference Count : 1]<UL><LI> lk_task.o(i.lk_task_init)
</UL>
<P><STRONG><a name="[49]"></a>remote433_left_callBack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lk_task.o(i.remote433_left_callBack))
<BR>[Address Reference Count : 1]<UL><LI> lk_task.o(i.lk_task_init)
</UL>
<P><STRONG><a name="[47]"></a>remote433_menu_callBack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lk_task.o(i.remote433_menu_callBack))
<BR>[Address Reference Count : 1]<UL><LI> lk_task.o(i.lk_task_init)
</UL>
<P><STRONG><a name="[48]"></a>remote433_right_callBack</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lk_task.o(i.remote433_right_callBack))
<BR>[Address Reference Count : 1]<UL><LI> lk_task.o(i.lk_task_init)
</UL>
<P><STRONG><a name="[4b]"></a>remote433_up_callBack</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lk_task.o(i.remote433_up_callBack))
<BR>[Address Reference Count : 1]<UL><LI> lk_task.o(i.lk_task_init)
</UL>
<P><STRONG><a name="[73]"></a>task_1ms_callBack</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lk_task.o(i.task_1ms_callBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = task_1ms_callBack &rArr; TMR_GetINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetINTStatus
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearITPendingBit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_shake
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_BRK_TMR9_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>usart_send</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lk_board.o(i.usart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usart_send &rArr; USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lk_board.o(i.lk_borad_init)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[72]"></a>SetSysClockTo144MHSI</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, system_at32f4xx.o(i.SetSysClockTo144MHSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClockTo144MHSI &rArr; RCC_StepModeCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_StepModeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
